; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; coryjfowler mcp2515 can be used well with Simple J1939 , as it met requirement of only reading and sending J1939 messages
; OR Just use CAN by sandeepmistry , it has extended ID reading , but not sure for J1939
; OPENSAEJ1939 is full stacked library , but doesn't seems to be necessary right now

[env:Arduino1]
platform = atmelavr
monitor_speed = 115200
board = uno
framework = arduino
lib_deps = 
	autowp/autowp-mcp2515@^1.2.1
	mike-matera/ArduinoSTL@^1.3.3
	; sandeepmistry/CAN@^0.3.1
	coryjfowler/mcp_can@^1.5.1
	vchavezb/SimpleJ1939@^0.0.2
build_src_filter = +<*Arduino1.cpp> +<*util.cpp>
upload_port = COM12
monitor_port = COM12
monitor_filters = time

[env:Arduino2]
platform = atmelavr
monitor_speed = 115200
board = uno
framework = arduino
lib_deps = 
	autowp/autowp-mcp2515@^1.2.1
	mike-matera/ArduinoSTL@^1.3.3
	; sandeepmistry/CAN@^0.3.1
	coryjfowler/mcp_can@^1.5.1
	vchavezb/SimpleJ1939@^0.0.2
build_src_filter = +<*Arduino2.cpp> +<*util.cpp>
upload_port = COM13
monitor_port = COM13
monitor_filters = time

[platformio]
description = Now it is Linduino CAN Tester
